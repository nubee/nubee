docs:
  url:   /docs
  param: { module: docs, action: index }

product:
  class:   sfDoctrineRouteCollection
  options:
    model:  Product
    column: id
    module: product

project_new:
  url:   /:product_id/project/new
  class:   sfDoctrineRoute
  options:
    model:  Project
    type: object
  param: { module: project, action: new }
  
project:
  class:   sfDoctrineRouteCollection
  options:
    model:  Project
    column: id
    module: project
    actions: [ edit, update, show, delete ]
    
project_create:
  url:   /:product_id/project/create
  class:   sfDoctrineRoute
  options:
    model:  project
    type: object
  param: { module: project, action: create }
  requirements:
    sf_method: post
    
iteration_new:
  url:   /:project_id/iteration/new
  class:   sfDoctrineRoute
  options:
    model:  Iteration
    type: object
  param: { module: iteration, action: new }

iteration_create:
  url:   /:project_id/iteration/create
  class:   sfDoctrineRoute
  options:
    model:  Iteration
    type: object
  param: { module: iteration, action: create }
  requirements:
    sf_method: post

iteration:
  class:   sfDoctrineRouteCollection
  options:
    model:  Iteration
    column: id
    module: iteration
    actions: [ edit, update, show, delete ]

story_new:
  url:   /:iteration_id/story/new
  class:   sfDoctrineRoute
  options:
    model:  Story
    type: object
  param: { module: story, action: new }

story_create:
  url:   /:iteration_id/story/create
  class:   sfDoctrineRoute
  options:
    model:  Story
    type: object
  param: { module: story, action: create }
  requirements:
    sf_method: post

story:
  class:   sfDoctrineRouteCollection
  options:
    model:   Story
    column:  id
    module:  story
    actions: [ edit, update, show, delete ]

task_new:
  url:   /:story_id/task/new
  class:   sfDoctrineRoute
  options:
    model:  Task
    type: object
  param: { module: task, action: new }

task_create:
  url:   /:story_id/task/create
  class:   sfDoctrineRoute
  options:
    model:  Task
    type: object
  param: { module: task, action: create }
  requirements:
    sf_method: post
    
task:
  class:   sfDoctrineRouteCollection
  options:
    model:  Task
    column: id
    module: task
    actions: [ edit, update, show, delete ]
    object_actions: { sortTop: put, sortUp: put, sortDown: put, sortBottom: put }

backlogtask_new:
  url:    /:project_id/backlogtask/new
  class:  sfDoctrineRoute
  options:
    model: BacklogTask
    type:  object
  param: { module: backlogtask, action: new }

backlogtask_create:
  url:     /:project_id/backlogtask/create
  class:   sfDoctrineRoute
  options:
    model: BacklogTask
    type:  object
  param: { module: backlogtask, action: create }
  requirements:
    sf_method: post

backlogtask:
  class:    sfDoctrineRouteCollection
  options:
    model:  BacklogTask
    column: id
    module: backlogtask
    actions: [ edit, update, show, delete ]
    object_actions: { sortTop: put, sortUp: put, sortDown: put, sortBottom: put }

team:
  class:   sfDoctrineRouteCollection
  options:
    model:  Team
    column: id
    module: team
    object_actions: { addUser: put, removeUser: put }

user:
  class:   sfDoctrineRouteCollection
  options:
    model:  sfGuardUser
    column: id
    module: user
    object_actions: { addTeam: put, removeTeam: put }

workingunit:
  class:   sfDoctrineRouteCollection
  options:
    model:  WorkingUnit
    column: id
    module: workingunit
    actions: [ delete ]
    
workingunit_create:
  url:   /task/:id/add-workingunit/
  class:   sfDoctrineRoute
  options:
    model:  Task
    type: object
  param: { module: task, action: addWorkingUnit }
  requirements:
    sf_method: put

login:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

logout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

homepage:
  url:   /
  param: { module: content, action: dashboard }
