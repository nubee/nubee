<?php

/**
 * BaseStory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $iteration_id
 * @property string $name
 * @property string $description
 * @property enum $priority
 * @property Iteration $Iteration
 * @property Doctrine_Collection $Tasks
 * 
 * @method integer             getIterationId()  Returns the current record's "iteration_id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method string              getDescription()  Returns the current record's "description" value
 * @method enum                getPriority()     Returns the current record's "priority" value
 * @method Iteration           getIteration()    Returns the current record's "Iteration" value
 * @method Doctrine_Collection getTasks()        Returns the current record's "Tasks" collection
 * @method Story               setIterationId()  Sets the current record's "iteration_id" value
 * @method Story               setName()         Sets the current record's "name" value
 * @method Story               setDescription()  Sets the current record's "description" value
 * @method Story               setPriority()     Sets the current record's "priority" value
 * @method Story               setIteration()    Sets the current record's "Iteration" value
 * @method Story               setTasks()        Sets the current record's "Tasks" collection
 * 
 * @package    nubee
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('story');
        $this->hasColumn('iteration_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('priority', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'none',
              1 => 'p1',
              2 => 'p2',
              3 => 'p3',
              4 => 'p4',
              5 => 'p5',
              6 => 'p6',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Iteration', array(
             'local' => 'iteration_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Task as Tasks', array(
             'local' => 'id',
             'foreign' => 'story_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}